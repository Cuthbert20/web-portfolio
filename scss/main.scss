@import 'config';
@import 'menu';


* {
    box-sizing: border-box;
}

body {
    @include background;
    background-color: $primary-color;
    color: set-text-color($primary-color);
    height: 100%;
    margin: 0;
    font-family: 'Comfortaa', cursive;
    line-height: 1.5;
}

//Headings
h1, h2, h3 {
    margin: 0;
    font-weight: 400;

    &.lg-heading {
        font-size: 6rem;
    }

    &.sm-heading {
        margin-bottom: 2rem;
        padding: 0.2rem 1rem;
        //lighten is a sass function, takes in two params (primary/main color, 2) 
        //second param is how much you want to lighten the background color.
        //we wrapped the background in rgba so that we can put a photo under the background and you will be able
        //to see the photo
        background: rgba(lighten($primary-color, 2), 0.5);
    }
}

a,i {
    color: #f1f1f1;
    text-decoration: none;
}

header {
    position: fixed;
    //z-index is how close to you an element is to you
    z-index: 2;
    width: 100%;
}

.text-secondary {
    color: $secondary-color;
}

main {
    padding: 4rem;
    // height: 100%;
    //using calc built in func telling the main to display 100vh minus the height of the footer which is 60px in height.
    //this creates a sticky footer to create a sticky footer you just set the height to 100vh minus the height of the footer.
    min-height: calc(100vh - 60px);

    .icons {
        margin-top: 1rem;

        i {
            padding: 0.4rem;

            &:hover {
                color: $secondary-color;
                //bringing in mixin from top
                @include easeOut()
            }
        }
    }
    //selecting any elements in main with the id of home, (which in our case is just main)
    &#home {
        //we don't want any scrollbars on home page
        overflow: hidden;
        h1 {
            margin-top: 20vh;//viewport height 20 out of a 100
        }
    }
}
//using grid template areas, it will be a 3 fractional grid.
.about-info {
    display: grid;
    //putting gaps between our grids
    grid-gap: 30px;
    //visual representation of what you want to display
    grid-template-areas: 
    "bioimage bio bio"
    "job1 job2 job3";
    //instead of setting 1fr 1fr 1fr we can use the repeat func and sass how many times to repeat the 1fr.
    grid-template-columns: repeat(3, 1fr);
//nesting in .about-info class
    //creating grid areas
.bio-image {
    //bioimage is coming from our grid-template-areas:
    grid-area: bioimage;
    margin: auto;
    border-radius: 50%;
    border: $secondary-color 3px solid;
}

.bio {
    grid-area: bio;
    font-size: 1.5rem;
}

.job-1 {
    grid-area: job1;
}

.job-2 {
    grid-area: job2;
}

.job-3 {
    grid-area: job3;
}

.job {
    background: lighten($primary-color, 5);
    padding: 0.5rem;
    border-bottom: $secondary-color 5px solid;
}
}

#main-footer {
    text-align: center;
    padding: 1rem;
    //using darken function on background color.
    background: darken($primary-color, 10);
    color: set-text-color($primary-color);
    height: 60px;

}
//putting media queries at the bottom cause you want them to run after the inital css.
@import 'mobile';

